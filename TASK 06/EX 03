from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
import pandas as pd

# Load the Iris dataset
iris = load_iris()

# Convert to a DataFrame for better visualization and manipulation
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['species'] = iris.target


def split_dataset(df, test_size=0.2, random_state=42):
    """
    Splits the dataset into training and testing sets.

    Parameters:
    df (pandas.DataFrame): The dataset to split.
    test_size (float): The proportion of the dataset to include in the test split.
    random_state (int): Controls the shuffling applied to the data before the split.

    Returns:
    tuple: Four DataFrames containing the training features, test features, training labels, and test labels.
    """
    # Features and target
    X = df.drop(columns=['species'])
    y = df['species']

    # Perform the split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=random_state)

    return X_train, X_test, y_train, y_test


# Split the dataset
X_train, X_test, y_train, y_test = split_dataset(df)

# Print the results
print(f"Training features:\n{X_train.head()}\n")
print(f"Test features:\n{X_test.head()}\n")
print(f"Training labels:\n{y_train.head()}\n")
print(f"Test labels:\n{y_test.head()}\n")
