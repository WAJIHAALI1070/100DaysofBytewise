#Build a decision tree classifier to classify iris flower species.

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import classification_report, confusion_matrix

# Step 1: Load the Iris dataset
print("Loading the Iris dataset...")
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = pd.Series(iris.target)
print("Dataset loaded successfully.")

# Step 2: Split the dataset into training and testing sets
print("Splitting the dataset into training and testing sets...")
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print("Dataset split completed.")

# Step 3: Train the decision tree classifier
print("Training the decision tree classifier...")
clf = DecisionTreeClassifier(random_state=42)
clf.fit(X_train, y_train)
print("Model training completed.")

# Step 4: Print the classification report and confusion matrix
print("Predicting on the test set...")
y_pred = clf.predict(X_test)

print("Classification Report:")
print(classification_report(y_test, y_pred))

print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))

# Step 5: Visualize the decision tree
print("Visualizing the decision tree...")
plt.figure(figsize=(20,10))
plot_tree(clf, feature_names=iris.feature_names, class_names=iris.target_names, filled=True)
plt.show()
print("Visualization completed.")

